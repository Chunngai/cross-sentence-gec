1. Customized files in fairseq:
	fairseq/interactive.py
	fairseq/fairseq/multiinput_sequence_generator.py
	fairseq/fairseq/criterions/edit_weighted_cross_entropy.py
	fairseq/fairseq/criterions/edit_weighted_label_smoothed_cross_entropy.py
	fairseq/fairseq/data/language_triple_dataset.py
	fairseq_fairseq/data/indexed_dataset.py  # Added IndexedInMemoryDataset
	fairseq/fairseq/models/fairseq_model.py  # Added customized class: FairseqDualEncoderModel
	fairseq/fairseq/models/fconv_dualenc_gec_gatedaux.py
	fairseq/fairseq/models/fconv_gec.py
	fairseq/fairseq/tasks/translation_ctx.py

2. Modify train_crosent.sh.

3. Move */fconv_dualenc_gec_gateaux.py.
	to fix the err:

fairseq-train: error: argument --arch/-a: invalid choice: 'fconv_dualenc_gec_gatedaux' (choose from 'fconv_self_att', 'fconv_self_att_wp', 'transformer', 'transformer_iwslt_de_en', 'transformer_wmt_en_de', 'transformer_vaswani_wmt_en_de_big', 'transformer_vaswani_wmt_en_fr_big', 'transformer_wmt_en_de_big', 'transformer_wmt_en_de_big_t2t', 'nonautoregressive_transformer', 'nonautoregressive_transformer_wmt_en_de', 'nacrf_transformer', 'iterative_nonautoregressive_transformer', 'iterative_nonautoregressive_transformer_wmt_en_de', 'cmlm_transformer', 'cmlm_transformer_wmt_en_de', 'levenshtein_transformer', 'levenshtein_transformer_wmt_en_de', 'levenshtein_transformer_vaswani_wmt_en_de_big', 'levenshtein_transformer_wmt_en_de_big', 'insertion_transformer', 'transformer_lm', 'transformer_lm_big', 'transformer_lm_baevski_wiki103', 'transformer_lm_wiki103', 'transformer_lm_baevski_gbw', 'transformer_lm_gbw', 'transformer_lm_gpt', 'transformer_lm_gpt2_small', 'transformer_lm_gpt2_medium', 'transformer_lm_gpt2_big', 'lstm', 'lstm_wiseman_iwslt_de_en', 'lstm_luong_wmt_en_de', 'lightconv', 'lightconv_iwslt_de_en', 'lightconv_wmt_en_de', 'lightconv_wmt_en_de_big', 'lightconv_wmt_en_fr_big', 'lightconv_wmt_zh_en_big', 'lightconv_lm', 'lightconv_lm_gbw', 'masked_lm', 'bert_base', 'bert_large', 'xlm_base', 'bart_large', 'bart_base', 'mbart_large', 'mbart_base', 'mbart_base_wmt20', 'roberta', 'roberta_base', 'roberta_large', 'xlm', 'wav2vec', 'hf_gpt2', 'hf_gpt2_medium', 'hf_gpt2_large', 'hf_gpt2_xl', 'lstm_lm', 'fconv', 'fconv_iwslt_de_en', 'fconv_wmt_en_ro', 'fconv_wmt_en_de', 'fconv_wmt_en_fr', 'multilingual_transformer', 'multilingual_transformer_iwslt_de_en', 'transformer_from_pretrained_xlm', 'transformer_align', 'transformer_wmt_en_de_big_align', 'fconv_lm', 'fconv_lm_dauphin_wikitext103', 'fconv_lm_dauphin_gbw', 'dummy_model', 'transformer_lm_megatron', 'transformer_lm_megatron_11b', 'model_parallel_roberta', 'model_parallel_roberta_base', 'model_parallel_roberta_large')


4. Should run `pip3 install --editable ./` again when modifying fairseq. (add, rm arch, etc.)
	(Seems not succedded coz fairseq has been installed?)

5. Add FairseqDualEncoderModel in fairseq_model.py  (needed when setup is successful?)
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/usr/local/bin/fairseq-train", line 25, in importlib_load_entry_point
    return next(matches).load()
  File "/usr/lib/python3.8/importlib/metadata.py", line 77, in load
    module = import_module(match.group('module'))
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 783, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 18, in <module>
    from fairseq import (
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/__init__.py", line 18, in <module>
    import fairseq.models  # noqa
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/models/__init__.py", line 132, in <module>
    module = importlib.import_module('fairseq.models.' + model_name)
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/models/fconv_dualenc_gec_gatedaux.py", line 19, in <module>
    from . import (
ImportError: cannot import name 'FairseqDualEncoderModel' from partially initialized module 'fairseq.models' (most likely due to a circular import) (/home/neko/Exp/crosentgec/fairseq/fairseq/models/__init__.py)


6. Add FairseqDualEncoderModel in models/__init__.py: from .fairseq_model import ()  (needed ... ?)
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/usr/local/bin/fairseq-train", line 25, in importlib_load_entry_point
    return next(matches).load()
  File "/usr/lib/python3.8/importlib/metadata.py", line 77, in load
    module = import_module(match.group('module'))
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 783, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 18, in <module>
    from fairseq import (
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/__init__.py", line 18, in <module>
    import fairseq.models  # noqa
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/models/__init__.py", line 132, in <module>
    module = importlib.import_module('fairseq.models.' + model_name)
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/models/fconv_dualenc_gec_gatedaux.py", line 19, in <module>
    from . import (
ImportError: cannot import name 'FairseqDualEncoderModel' from partially initialized module 'fairseq.models' (most likely due to a circular import) (/home/neko/Exp/crosentgec/fairseq/fairseq/models/__init__.py)

7. Move */translation_ctx.py
	to fix the err:

fairseq-train: error: argument --task: invalid choice: 'translation_ctx' (choose from 'translation_multi_simple_epoch', 'translation', 'multilingual_translation', 'semisupervised_translation', 'language_modeling', 'denoising', 'multilingual_denoising', 'translation_from_pretrained_xlm', 'masked_lm', 'legacy_masked_lm', 'sentence_prediction', 'cross_lingual_lm', 'audio_pretraining', 'sentence_ranking', 'translation_lev', 'translation_from_pretrained_bart', 'multilingual_masked_lm', 'dummy_lm', 'dummy_masked_lm', 'dummy_mt')

8. Move */language_triple_dataset.py
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/usr/local/bin/fairseq-train", line 25, in importlib_load_entry_point
    return next(matches).load()
  File "/usr/lib/python3.8/importlib/metadata.py", line 77, in load
    module = import_module(match.group('module'))
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 783, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 18, in <module>
    from fairseq import (
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/__init__.py", line 23, in <module>
    import fairseq.tasks  # noqa
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/tasks/__init__.py", line 70, in <module>
    importlib.import_module('fairseq.tasks.' + task_name)
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/tasks/translation_ctx_with_notes.py", line 11, in <module>
    from fairseq.data import (
ImportError: cannot import name 'LanguageTripleDataset' from 'fairseq.data' (/home/neko/Exp/crosentgec/fairseq/fairseq/data/__init__.py)

9. Add from .language_triple_dataset import LanguageTripleDataset in data/__init__.py  (needed ...?)
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/usr/local/bin/fairseq-train", line 25, in importlib_load_entry_point
    return next(matches).load()
  File "/usr/lib/python3.8/importlib/metadata.py", line 77, in load
    module = import_module(match.group('module'))
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 783, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 18, in <module>
    from fairseq import (
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/__init__.py", line 23, in <module>
    import fairseq.tasks  # noqa
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/tasks/__init__.py", line 70, in <module>
    importlib.import_module('fairseq.tasks.' + task_name)
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/tasks/translation_ctx_with_notes.py", line 11, in <module>
    from fairseq.data import (
ImportError: cannot import name 'LanguageTripleDataset' from 'fairseq.data' (/home/neko/Exp/crosentgec/fairseq/fairseq/data/__init__.py)

10. from .indexed_dataset import ... in data/__init__.py: add IndexedInMemoryDataset  (needed ...?)
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/usr/local/bin/fairseq-train", line 25, in importlib_load_entry_point
    return next(matches).load()
  File "/usr/lib/python3.8/importlib/metadata.py", line 77, in load
    module = import_module(match.group('module'))
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 783, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 18, in <module>
    from fairseq import (
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/__init__.py", line 23, in <module>
    import fairseq.tasks  # noqa
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/tasks/__init__.py", line 70, in <module>
    importlib.import_module('fairseq.tasks.' + task_name)
  File "/usr/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/tasks/translation_ctx_with_notes.py", line 11, in <module>
    from fairseq.data import (
ImportError: cannot import name 'IndexedInMemoryDataset' from 'fairseq.data' (/home/neko/Exp/crosentgec/fairseq/fairseq/data/__init__.py)

11. In */translation_ctx ln 76: load_dataset(): add: combine=False, epoch=1
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 349, in cli_main
    distributed_utils.call_main(args, main)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/distributed_utils.py", line 189, in call_main
    main(args, **kwargs)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 63, in main
    task.load_dataset(valid_sub_split, combine=False, epoch=1)
TypeError: load_dataset() got an unexpected keyword argument 'combine'	

12. In */fconv_dualenc_gec_gatedaux.py ln 614: rm left_pad
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 349, in cli_main
    distributed_utils.call_main(args, main)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/distributed_utils.py", line 189, in call_main
    main(args, **kwargs)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 66, in main
    model = task.build_model(args)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/tasks/fairseq_task.py", line 214, in build_model
    model = models.build_model(args, self)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/models/__init__.py", line 49, in build_model
    return ARCH_MODEL_REGISTRY[args.arch].build_model(args, task)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/models/fconv_dualenc_gec_gatedaux.py", line 89, in build_model
    auxencoder = FConvCustomEncoder(
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/models/fconv_dualenc_gec_gatedaux.py", line 145, in __init__
    self.embed_positions = PositionalEmbedding(
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/models/fconv_dualenc_gec_gatedaux.py", line 614, in PositionalEmbedding
    m = LearnedPositionalEmbedding(num_embeddings, embedding_dim, padding_idx, left_pad)
TypeError: __init__() takes 4 positional arguments but 5 were given

13. Don't use cpu to avoid err:

Traceback (most recent call last):
  File "fairseq/train.py", line 14, in <module>
    cli_main()
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 349, in cli_main
    distributed_utils.call_main(args, main)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/distributed_utils.py", line 189, in call_main
    main(args, **kwargs)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq_cli/train.py", line 106, in main
    extra_state, epoch_itr = checkpoint_utils.load_checkpoint(args, trainer)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/checkpoint_utils.py", line 132, in load_checkpoint
    extra_state = trainer.load_checkpoint(
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/trainer.py", line 252, in load_checkpoint
    state = checkpoint_utils.load_checkpoint_to_cpu(filename)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/checkpoint_utils.py", line 176, in load_checkpoint_to_cpu
    state = _upgrade_state_dict(state)
  File "/home/neko/Exp/crosentgec/fairseq/fairseq/checkpoint_utils.py", line 355, in _upgrade_state_dict
    registry.set_defaults(state["args"], models.ARCH_MODEL_REGISTRY[state["args"].arch])
KeyError: 'convlm'

14. 
load_checkpoint() in old fairseq: train.main() -> train.load_checkpoint() -> trainer.load_checkpoint() -> utils.load_model_state() -> utils._upgrade_model_state()

load_checkpoint() in new fairseq: train.main() -> checkpoint_utils.load_checkpoint() -> trainer.load_checkpoint() -> checkpoint_utils.load_checkpoint_to_cpu() -> checkpoint_utils._upgrade_state_dict()

15. Cooments registry.set_defaults(state["args"], models.ARCH_MODEL_REGISTRY[state["args"].arch])

16. state at the end of _upgrade_state_dict in both ver of fairseq are the same.

17. model in utils.load_model_state() in the old ver and trainer.load_checkpoint() in the new ver are the same. Both are the model proposed in the paper. 

18. In the old ver of fairseq, in utils.load_model_state() `model.upgrade_state_dict` is called, which is in fairseq_model.py. Before and after the upgrade operation the model does not change.

19. The try statement in utils.load_model_state() is modified by the authors to fix the param name mismatch priblem. The modified code should be written in trainer.load_checkpoint() in the if bexists clause in the new fairseq. Note that in the if bexists clause of the new fairseq there is originally no `self.get_model().upgrade_state_dict(state['model']), but the statement exists in utils.load_model_state(), right after `state = _upgrade_state_dict(state)`, in the form of `model.upgrade_state_dict(state['model'])`. The statement should be added to trainer.load_checkpoint() in the new fairseq, right after `state = checkpoint_utils.load_checkpoint_to_cpu()`, to fix the err:

Traceback (most recent call last):
  File "/mnt/crosent/test/fairseq/fairseq/utils.py", line 80, in load_model_state
    model.load_state_dict(model_state)
  File "/mnt/crosent/test/fairseq/fairseq/models/fairseq_model.py", line 55, in load_state_dict
    super().load_state_dict(state_dict, strict)
  File "/root/miniconda3/envs/myconda/lib/python3.6/site-packages/torch/nn/modules/module.py", line 719, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for FConvDualEncoderModel:
        size mismatch for decoder.convolutions.0.weight_g: copying a param of torch.Size([1, 1, 2048]) from checkpoint, where the shape is torch.Size([3, 1, 1]) in current model.
        size mismatch for decoder.convolutions.1.weight_g: copying a param of torch.Size([1, 1, 2048]) from checkpoint, where the shape is torch.Size([3, 1, 1]) in current model.
        size mismatch for decoder.convolutions.2.weight_g: copying a param of torch.Size([1, 1, 2048]) from checkpoint, where the shape is torch.Size([3, 1, 1]) in current model.
        size mismatch for decoder.convolutions.3.weight_g: copying a param of torch.Size([1, 1, 2048]) from checkpoint, where the shape is torch.Size([3, 1, 1]) in current model.
        size mismatch for decoder.convolutions.4.weight_g: copying a param of torch.Size([1, 1, 2048]) from checkpoint, where the shape is torch.Size([3, 1, 1]) in current model.
        size mismatch for decoder.convolutions.5.weight_g: copying a param of torch.Size([1, 1, 2048]) from checkpoint, where the shape is torch.Size([3, 1, 1]) in current model.
        size mismatch for decoder.convolutions.6.weight_g: copying a param of torch.Size([1, 1, 2048]) from checkpoint, where the shape is torch.Size([3, 1, 1]) in current model.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "fairseq/train.py", line 354, in <module>
    main(args)
  File "fairseq/train.py", line 71, in main
    load_checkpoint(args, trainer, epoch_itr)
  File "fairseq/train.py", line 314, in load_checkpoint
    extra_state = trainer.load_checkpoint(checkpoint_path)
  File "/mnt/crosent/test/fairseq/fairseq/fp16_trainer.py", line 86, in load_checkpoint
    extra_state = super().load_checkpoint(filename)
  File "/mnt/crosent/test/fairseq/fairseq/trainer.py", line 81, in load_checkpoint
    utils.load_model_state(filename, self.model)
  File "/mnt/crosent/test/fairseq/fairseq/utils.py", line 82, in load_model_state
    raise Exception('Cannot load model parameters from checkpoint, '
Exception: Cannot load model parameters from checkpoint, please ensure that the architectures match

20. Comments ln 283-301 in trainer.py of the new fairseq and replace it with the code in trainer.py of the old fiarseq
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq_cli/train.py", line 349, in cli_main
    distributed_utils.call_main(args, main)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/distributed_utils.py", line 189, in call_main
    main(args, **kwargs)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq_cli/train.py", line 106, in main
    extra_state, epoch_itr = checkpoint_utils.load_checkpoint(args, trainer)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/checkpoint_utils.py", line 132, in load_checkpoint
    extra_state = trainer.load_checkpoint(
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/trainer.py", line 289, in load_checkpoint
    assert (
AssertionError: Criterion does not match; please reset the optimizer (--reset-optimizer).

21. Comments ln 357 in trainer.py
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq_cli/train.py", line 349, in cli_main
    distributed_utils.call_main(args, main)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/distributed_utils.py", line 189, in call_main
    main(args, **kwargs)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq_cli/train.py", line 106, in main
    extra_state, epoch_itr = checkpoint_utils.load_checkpoint(args, trainer)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/checkpoint_utils.py", line 151, in load_checkpoint
    epoch_itr = trainer.get_train_iterator(
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/trainer.py", line 353, in get_train_iterator
    self.task.load_dataset(
TypeError: load_dataset() got an unexpected keyword argument 'data_selector'

22. Rm () of max_positions on ln 250 and ln 542 in fconv_dualenc_gec_gatedaux
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq_cli/train.py", line 349, in cli_main
    distributed_utils.call_main(args, main)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/distributed_utils.py", line 189, in call_main
    main(args, **kwargs)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq_cli/train.py", line 106, in main
    extra_state, epoch_itr = checkpoint_utils.load_checkpoint(args, trainer)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/checkpoint_utils.py", line 151, in load_checkpoint
    epoch_itr = trainer.get_train_iterator(
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/trainer.py", line 365, in get_train_iterator
    self.model.max_positions(),
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/models/fairseq_model.py", line 564, in max_positions
    return (self.auxencoder.max_positions(), self.encoder.max_positions(), self.decoder.max_positions())
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/models/fconv_dualenc_gec_gatedaux.py", line 250, in max_positions
    return self.embed_positions.max_positions()
TypeError: 'int' object is not callable

23. Add the implementation of size() on ln 136 in language_triple_dataset.py
	to fix the err:

Traceback (most recent call last):
  File "/usr/local/bin/fairseq-train", line 33, in <module>
    sys.exit(load_entry_point('fairseq', 'console_scripts', 'fairseq-train')())
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq_cli/train.py", line 349, in cli_main
    distributed_utils.call_main(args, main)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/distributed_utils.py", line 189, in call_main
    main(args, **kwargs)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq_cli/train.py", line 106, in main
    extra_state, epoch_itr = checkpoint_utils.load_checkpoint(args, trainer)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/checkpoint_utils.py", line 151, in load_checkpoint
    epoch_itr = trainer.get_train_iterator(
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/trainer.py", line 359, in get_train_iterator
    return self.task.get_batch_iterator(
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/tasks/fairseq_task.py", line 172, in get_batch_iterator
    indices = data_utils.filter_by_size(
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/data/data_utils.py", line 193, in filter_by_size
    indices, ignored = _filter_by_size_dynamic(indices, dataset.size, max_positions)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/data/data_utils.py", line 167, in _filter_by_size_dynamic
    indices = np.fromiter(itr, dtype=np.int64, count=-1)
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/data/data_utils.py", line 129, in collect_filtered
    if function(el):
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/data/data_utils.py", line 153, in check_size
    if isinstance(size_fn(idx), dict) and isinstance(max_positions, tuple):
  File "/home/neko/Exp/crosentgec-exp/fairseq/fairseq/data/fairseq_dataset.py", line 46, in size
    raise NotImplementedError
NotImplementedError


